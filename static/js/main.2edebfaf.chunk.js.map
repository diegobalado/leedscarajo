{"version":3,"sources":["config.js","utils/helpers.js","recoil/atoms.js","utils/hooks.js","utils/selectors.js","components/Positions/index.js","components/Bettings/index.js","components/Fixture/index.js","components/Home/index.js","routes/index.js","components/common/Header/index.js","components/common/ErrorBoundary/index.js","App.js","serviceWorker.js","index.js"],"names":["TODAY","dateFnsFormat","Date","ENDPOINTS","STANDINGS","FIXTURE","TEAMS","FETCH_OPTIONS","process","setLocalStorage","key","data","now","expires","setDate","getDate","item","localStorage","setItem","JSON","stringify","clearLocalStorage","Object","keys","map","getEndpoint","service","standings","atom","default","fixture","teams","FETCHING_STANDINGS","FETCHING_FIXTURE","FETCHING_TEAMS","getAtom","atomKey","useEndpoint","endpoint","selector","useRecoilState","recoilData","setRecoilData","lsKey","getItem","parse","isExpired","getLocalStorage","localData","useRecoilValue","useState","setData","error","setError","loading","setLoading","fetching","setFetching","storedData","useEffect","a","fetch","res","json","fetchData","useFetch","console","log","standingsSelector","table","matchesSelector","matches","teamsSelector","Positions","property","direction","sort","setSort","DataTable","primaryKey","onSort","columns","header","Text","sortable","setTeamResult","team","goalsFor","goalsAgainst","newTeam","parseInt","playedGames","goalDifference","won","points","lost","draw","updateStandings","homeTeam","homeValue","awayTeam","awayValue","positions","setPositions","setFixture","newTable","homeGoals","awayGoals","homeTeamData","filter","t","name","awayTeamData","homeData","awayData","setMatchResult","newFixture","match","removeMatch","Score","styled","div","Bettings","setShow","home","away","setHomeValue","setAwayValue","Layer","onEsc","onClickOutside","Box","pad","width","justify","RangeInput","value","onChange","event","target","min","max","Button","label","size","primary","onClick","parseMatches","matchDate","utcDate","date","parseTeams","Fixture","setValue","setHome","setAway","matchesData","setMatchesData","filterTerms","setFilterTerms","show","Select","options","option","onSearch","text","escapedText","replace","exp","RegExp","o","test","search","onClickRow","datum","Home","Routes","path","Header","Nav","to","ErrorBoundary","props","state","hasError","errorInfo","this","children","React","Component","App","className","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2edebfaf.chunk.js","sourcesContent":["import dateFnsFormat from 'date-fns/format';\n\nconst LEAGUE_CODE = '2016';\nconst END_LEAGUE = '2020-07-22';\nconst TODAY = dateFnsFormat(new Date(), 'yyyy-MM-dd');\n\nexport const ENDPOINTS = {\n  STANDINGS: `competitions/${LEAGUE_CODE}/standings`,\n  FIXTURE: `competitions/${LEAGUE_CODE}/matches?dateFrom=${TODAY}&dateTo=${END_LEAGUE}`,\n  TEAMS: `competitions/${LEAGUE_CODE}/teams`\n};\nexport const FETCH_OPTIONS = {\n  'method': 'GET',\n  'headers': {\n    'x-auth-token': process.env.REACT_APP_API_FOOTBALL_TOKEN\n  }\n};","import { ENDPOINTS } from '../config';\n\nexport const setLocalStorage = (key, data) => {\n  const now = new Date();\n  const expires = new Date();\n  expires.setDate(now.getDate() + 1);\n  const item = { data, expires };\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getLocalStorage = key => {\n  const item = localStorage.getItem(key);\n  if (!item) return null;\n  const { data, expires } = JSON.parse(item);\n  const now = new Date();\n  const expireDate = new Date(expires);\n  const isExpired = expireDate < now;\n  return { data, isExpired };\n};\n\nexport const clearLocalStorage = () => {\n  Object.keys(ENDPOINTS).map(item => setLocalStorage(`ls-${item}`, ''));\n};\n\nexport const getEndpoint = service => `${process.env.REACT_APP_API_FOOTBALL_URL}/${ENDPOINTS[service]}`;","import { atom } from 'recoil';\n\nexport const standings = atom({ key: 'STANDINGS', default: null });\nexport const fixture = atom({ key: 'FIXTURE', default: null });\nexport const teams = atom({ key: 'TEAMS', default: null });\nconst FETCHING_STANDINGS = atom({ key: 'fetchingStandings', default: false });\nconst FETCHING_FIXTURE = atom({ key: 'fetchingFixture', default: false });\nconst FETCHING_TEAMS = atom({ key: 'fetchingTeams', default: false });\n\nexport const getAtom = atomKey => {\n  const atoms = {\n    STANDINGS: standings,\n    FIXTURE: fixture,\n    TEAMS: teams,\n    FETCHING_STANDINGS,\n    FETCHING_FIXTURE,\n    FETCHING_TEAMS,\n  };\n  return atoms[atomKey];\n};","import { useState, useEffect } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { getLocalStorage, setLocalStorage, getEndpoint } from './helpers';\nimport { FETCH_OPTIONS } from '../config';\nimport { getAtom } from '../recoil/atoms';\n\nconst useFetch = (endpoint, localData = null, selector = data => data) => {\n  const recoilData = useRecoilValue(getAtom(endpoint));\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [fetching, setFetching] = useRecoilState(getAtom(`FETCHING_${endpoint}`));\n  const storedData = recoilData ? recoilData : localData;\n\n  useEffect(() => {\n    if (!fetching) {\n      if (storedData) {\n        setData(storedData);\n        setLoading(false);\n        setError(false);\n      } else {\n        setFetching(true);\n        const fetchData = async () => {\n          setLoading(true);\n          try {\n            const res = await fetch(getEndpoint(endpoint), FETCH_OPTIONS);\n            const json = await res.json();\n            setData(selector(json));\n            setLoading(false);\n            setFetching(false);\n          } catch (error) {\n            setError(error);\n            setFetching(false);\n          }\n        };\n        fetchData();\n      }\n    }\n  }, [recoilData]);\n  return { data, error, loading };\n};\n\nexport const useEndpoint = (endpoint, selector) => {\n  const [recoilData, setRecoilData] = useRecoilState(getAtom(endpoint));\n  const lsKey = `ls-${endpoint}`;\n  const item = getLocalStorage(lsKey);\n  const localData = item && item.data;\n  const isExpired = item && item.isExpired;\n  const { loading, data, error } = useFetch(endpoint, localData, selector);\n  error && console.log('error:', error);\n  \n  useEffect(() => {\n    if (!loading && data) {\n      !localData && !isExpired && setLocalStorage(lsKey, data);\n      !recoilData && setRecoilData(data);\n    }\n  }, [data, loading, recoilData]);\n  \n  return { data, error, loading };\n};\n\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object';\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n  const [windowSize, setWindowSize] = useState(getSize);\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n  return windowSize;\n};","export const standingsSelector = data => data && data.standings[0].table;\nexport const matchesSelector = data => data && data.matches;\nexport const teamsSelector = data => data && data.teams;","import React, { useState } from 'react';\nimport { DataTable, Text } from 'grommet';\nimport { useEndpoint } from '../../utils/hooks';\nimport { standingsSelector }  from '../../utils/selectors';\n\nconst Positions = () => {\n  const { data } = useEndpoint('STANDINGS', standingsSelector);\n  const [sort, setSort] = useState({\n    property: 'points',\n    direction: 'desc'\n  });\n  return !data ? <div>Loading...</div> : (\n    <DataTable\n      primaryKey='index'\n      sort={sort}\n      onSort={setSort}\n      columns={[\n        // {\n        //   property: 'position',\n        //   header: <Text>Position</Text>\n        // },\n        {\n          property: 'team.name',\n          header: <Text>Team</Text>,\n          sortable: false\n        },\n        {\n          property: 'playedGames',\n          header: <Text>G</Text>,\n        },\n        {\n          property: 'won',\n          header: <Text>W</Text>,\n        },\n        {\n          property: 'draw',\n          header: <Text>D</Text>,\n        },\n        {\n          property: 'lost',\n          header: <Text>L</Text>,\n        },\n        {\n          property: 'goalDifference',\n          header: <Text>GD</Text>,\n        },\n        {\n          property: 'points',\n          header: <Text>P</Text>,\n        },\n      ]}\n      data={data}\n    />\n  );\n};\n\nexport default Positions;","import React, { useState, useEffect } from 'react';\nimport { func, string } from 'prop-types';\nimport { RangeInput, Box, Button, Layer } from 'grommet';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { getAtom } from '../../recoil/atoms';\nimport { useEndpoint } from '../../utils/hooks';\nimport { standingsSelector }  from '../../utils/selectors';\n\nconst setTeamResult = (team, goalsFor, goalsAgainst) => {\n  const newTeam = { ...team };\n  newTeam['playedGames'] = parseInt(newTeam.playedGames) + 1;\n  newTeam['goalsFor'] = parseInt(newTeam.goalsFor) + parseInt(goalsFor);\n  newTeam['goalsAgainst'] = parseInt(newTeam.goalsAgainst) + parseInt(goalsAgainst);\n  newTeam['goalDifference'] = parseInt(newTeam.goalDifference) + parseInt(goalsFor) - parseInt(goalsAgainst);\n  if (goalsFor > goalsAgainst) {\n    newTeam['won'] = parseInt(newTeam.won) + 1;\n    newTeam['points'] = parseInt(newTeam.points) + 3;\n  }\n  else if (goalsFor < goalsAgainst) {\n    newTeam['lost'] = parseInt(newTeam.lost) + 1;\n  }\n  else {\n    newTeam['draw'] = parseInt(newTeam.draw) + 1;\n    newTeam['points'] = parseInt(newTeam.points) + 1;\n  }\n  return newTeam;\n};\n\nconst setMatchResult = (homeTeam, homeGoals, awayTeam, awayGoals, table) => {\n  const homeTeamData = table.filter(t => t.team.name === homeTeam)[0];\n  const awayTeamData = table.filter(t => t.team.name === awayTeam)[0];\n  const homeData = setTeamResult(homeTeamData, homeGoals, awayGoals);\n  const awayData = setTeamResult(awayTeamData, awayGoals, homeGoals);\n  const newTable = table.map(team => {\n    if (team.team.name === homeTeam) return homeData;\n    else if (team.team.name === awayTeam) return awayData;\n    else return team;\n  });\n  return newTable;\n};\n\nconst removeMatch = (homeTeam, awayTeam, fixture) => {\n  const newFixture = fixture.filter(match => match.homeTeam.name !== homeTeam || match.awayTeam.name !== awayTeam);\n  return newFixture;\n};\n\nconst updateStandings = (homeTeam, homeValue, awayTeam, awayValue, positions, setPositions, fixture, setFixture) => {\n  const table = positions;\n  const newTable = setMatchResult(homeTeam, homeValue, awayTeam, awayValue, table);\n  const newFixture = removeMatch(homeTeam, awayTeam, fixture);\n  setPositions(newTable);\n  setFixture(newFixture);\n};\n\nconst Score = styled.div`\n  max-width: 300px;\n`;\n\nconst Bettings = ({ setShow, home, away }) => {\n  const { data } = useEndpoint('STANDINGS', standingsSelector);\n  const [positions, setPositions] = useRecoilState(getAtom('STANDINGS'));\n  const [fixture, setFixture] = useRecoilState(getAtom('FIXTURE'));\n  const [homeValue, setHomeValue] = useState(0);\n  const [awayValue, setAwayValue] = useState(0);\n\n  useEffect(() => {\n    if (data) {\n      setPositions(data);\n    }\n  }, [data]);\n\n  return (\n    <Layer\n      onEsc={() => setShow(false)}\n      onClickOutside={() => setShow(false)}\n    >\n      <Box pad='large'>\n        <Box pad=\"medium\">\n          {`${home} - ${away}`}\n        </Box>\n        <Box width=\"medium\">\n          <Box>\n            <Box direction=\"row\" justify=\"between\" pad=\"medium\">\n              <Box width=\"medium\">\n                {home}\n              </Box>\n              <Score>\n                <RangeInput\n                  value={homeValue}\n                  onChange={event => setHomeValue(event.target.value)}\n                  min={0}\n                  max={5}\n                />\n              </Score>\n            </Box>\n            <Box direction=\"row\" justify=\"between\" pad=\"medium\">\n              <Box width=\"medium\">\n                {away}\n              </Box>\n              <Score>\n                <RangeInput\n                  value={awayValue}\n                  onChange={event => setAwayValue(event.target.value)}\n                  min={0}\n                  max={5}\n                />\n              </Score>\n            </Box>\n          </Box>\n          <Box pad='small'>\n            {`${home} ${homeValue} - ${awayValue} ${away}`}\n          </Box>\n        </Box>\n        <Box direction=\"row\" justify=\"between\" pad=\"medium\">\n          <Button label=\"Ok\" size=\"medium\" primary onClick={() => {\n            updateStandings(home, homeValue, away, awayValue, positions, setPositions, fixture, setFixture);\n            setShow(false);\n          }} />\n          <Button label=\"Cancel\" size=\"medium\" onClick={() => setShow(false)} />\n        </Box>\n      </Box>\n    </Layer>\n  );\n};\n\nBettings.propTypes = {\n  setShow: func,\n  home: string,\n  away: string,\n};\n\nexport default Bettings;\n","import React, { useState, useEffect } from 'react';\nimport { DataTable, Text, Select } from 'grommet';\nimport dateFnsFormat from 'date-fns/format';\nimport { useEndpoint } from '../../utils/hooks';\nimport { matchesSelector, teamsSelector } from '../../utils/selectors';\nimport Bettings from '../Bettings';\n\nconst parseMatches = data => {\n  return data && data.map(match => {\n    const matchDate = dateFnsFormat(new Date(match.utcDate), 'EEEE, d MMMM - H:mm');\n    return ({\n      home: match.homeTeam.name,\n      away: match.awayTeam.name,\n      date: matchDate,\n    });\n  });\n};\n\nconst parseTeams = data => data.map(team => team.name).sort();\n\nconst filter = (data, value) => data.filter(({ home, away }) => home === value || away === value);\n\nconst Fixture = () => {\n  const [value, setValue] = useState(null);\n  const [home, setHome] = useState(null);\n  const [away, setAway] = useState(null);\n  const [matchesData, setMatchesData] = useState(parseMatches(null));\n  const [filterTerms, setFilterTerms] = useState(null);\n  const [show, setShow] = useState(false);\n\n  const { data: matches } = useEndpoint('FIXTURE', matchesSelector);\n  const { data: teams } = useEndpoint('TEAMS', teamsSelector);\n\n  useEffect(() => {\n    matches && setMatchesData(parseMatches(matches));\n  }, [matches]);\n  \n  useEffect(() => {\n    matchesData && value && setMatchesData(filter(parseMatches(matches), value));\n  }, [value]);\n\n  useEffect(() => {\n    teams && setFilterTerms(parseTeams(teams));\n  }, [teams]);\n\n  return !matchesData|| !teams || !filterTerms ? <div>Loading...</div> : \n    <>\n      <Select\n        options={filterTerms}\n        value={value}\n        onChange={({ option }) => setValue(option)}\n        onSearch={text => {\n          const escapedText = text.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n          const exp = new RegExp(escapedText, 'i');\n          setFilterTerms(parseTeams(teams).filter(o => exp.test(o)));\n        }}\n      />\n      <DataTable\n        primaryKey='index'\n        columns={[\n          {\n            property: 'home',\n            header: <Text>Home</Text>,\n            search: true,\n          },\n          {\n            property: 'away',\n            header: <Text>Away</Text>,\n            search: true,\n          },\n          {\n            property: 'date',\n            header: <Text>Date</Text>,\n          },\n        ]}\n        data={matchesData}\n        onClickRow={({ datum }) => {\n          setHome(datum.home);\n          setAway(datum.away);\n          setShow(true);\n        }}\n      />\n      {show && <Bettings setShow={setShow} home={home} away={away} />}\n    </>;\n};\n\nexport default Fixture;","import React from 'react';\n\nconst Home = () => {\n  return <div>Home</div>;\n};\n\nexport default Home;","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Positions from '../components/Positions';\nimport Fixture from '../components/Fixture';\nimport Home from '../components/Home';\nimport Bettings from '../components/Bettings';\n\nconst Routes = () => \n  <Switch>\n    <Route path={`${process.env.PUBLIC_URL}/home`}>\n      <Home />\n    </Route>\n    <Route path={`${process.env.PUBLIC_URL}/positions`}>\n      <Positions />\n    </Route>\n    <Route path={`${process.env.PUBLIC_URL}/fixture`}>\n      <Fixture />\n    </Route>\n    <Route path={`${process.env.PUBLIC_URL}/bettings`}>\n      <Bettings />\n    </Route>\n  </Switch>;\n\nexport default Routes;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header as BaseHeader, Nav, Button } from 'grommet';\nimport { clearLocalStorage } from '../../../utils/helpers';\n\n\n\nconst Header = () => <BaseHeader pad=\"medium\">\n  <Nav direction=\"row\" >\n    <Link to={`${process.env.PUBLIC_URL}/home`}>Home</Link>\n    <Link to={`${process.env.PUBLIC_URL}/positions`}>Positions</Link>\n    <Link to={`${process.env.PUBLIC_URL}/fixture`}>Fixture</Link>\n    {/* <Link to={`${process.env.PUBLIC_URL}/bettings`}>Bettings</Link> */}\n    <Button onClick={clearLocalStorage} label=\"Refresh\" size=\"small\" />\n  </Nav>\n</BaseHeader>;\n\nexport default Header;","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.   \n    return { hasError: true };  \n  }\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops!</h1>;\n    }\n    return this.props.children; \n  }\n};\n\nexport default ErrorBoundary;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport './App.css';\nimport Routes from './routes';\nimport Header from './components/common/Header';\nimport ErrorBoundary from './components/common/ErrorBoundary';\n\n\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        <RecoilRoot>\n          <Router>\n            <Header />\n            <Routes />\n          </Router>\n        </RecoilRoot>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}