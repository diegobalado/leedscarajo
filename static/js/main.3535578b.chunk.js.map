{"version":3,"sources":["config.js","utils/helpers.js","utils/hooks.js","utils/selectors.js","components/Positions/index.js","components/Fixture/index.js","components/Home/index.js","components/Bettings/index.js","routes/index.js","components/common/Header/index.js","components/common/ErrorBoundary/index.js","App.js","serviceWorker.js","index.js"],"names":["TODAY","dateFnsFormat","Date","ENDPOINTS","STANDINGS","FIXTURE","TEAMS","FETCH_OPTIONS","process","setLocalStorage","key","data","now","expires","setDate","getDate","item","localStorage","setItem","JSON","stringify","getLocalStorage","getItem","parse","isExpired","clearLocalStorage","Object","keys","map","getEndpoint","service","useFetch","endpoint","storedData","useState","setData","error","setError","loading","setLoading","useEffect","a","fetch","res","json","fetchData","useEndpoint","selector","lsKey","localData","console","log","standingsSelector","standings","table","matchesSelector","matches","teamsSelector","teams","Positions","property","direction","sort","setSort","DataTable","primaryKey","onSort","columns","header","Text","sortable","parseMatches","match","matchDate","utcDate","home","homeTeam","name","away","awayTeam","date","parseTeams","team","Fixture","value","setValue","matchesData","setMatchesData","filterTerms","setFilterTerms","filter","Select","options","onChange","option","onSearch","text","escapedText","replace","exp","RegExp","o","test","search","Home","Bettings","Routes","path","Header","pad","Nav","to","Button","onClick","label","size","ErrorBoundary","props","state","hasError","errorInfo","this","children","React","Component","App","className","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3535578b.chunk.js","sourcesContent":["import dateFnsFormat from 'date-fns/format';\n\nconst LEAGUE_CODE = '2016';\nconst END_LEAGUE = '2020-07-22';\nconst TODAY = dateFnsFormat(new Date(), 'yyyy-MM-dd');\n\nexport const ENDPOINTS = {\n  STANDINGS: `competitions/${LEAGUE_CODE}/standings`,\n  FIXTURE: `competitions/${LEAGUE_CODE}/matches?dateFrom=${TODAY}&dateTo=${END_LEAGUE}`,\n  TEAMS: `competitions/${LEAGUE_CODE}/teams`\n};\nexport const FETCH_OPTIONS = {\n  'method': 'GET',\n  'headers': {\n    'x-auth-token': process.env.REACT_APP_API_FOOTBALL_TOKEN\n  }\n};","import { ENDPOINTS } from '../config';\n\nexport const setLocalStorage = (key, data) => {\n  const now = new Date();\n  const expires = new Date();\n  expires.setDate(now.getDate() + 1);\n  const item = { data, expires };\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getLocalStorage = key => {\n  const item = localStorage.getItem(key);\n  if (!item) return null;\n  const { data, expires } = JSON.parse(item);\n  const now = new Date();\n  const expireDate = new Date(expires);\n  const isExpired = expireDate < now;\n  return { data, isExpired };\n};\n\nexport const clearLocalStorage = () => {\n  Object.keys(ENDPOINTS).map(item => setLocalStorage(`ls-${item}`, ''));\n};\n\nexport const getEndpoint = service => `${process.env.REACT_APP_API_FOOTBALL_URL}/${ENDPOINTS[service]}`;","import { useState, useEffect } from 'react';\n// import { useRecoilState, atom } from 'recoil';\nimport { getLocalStorage, setLocalStorage, getEndpoint } from './helpers';\nimport { FETCH_OPTIONS } from '../config';\n\nexport const useFetch = (endpoint, storedData = null) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  \n  useEffect(() => {\n    if (storedData) {\n      setData(storedData);\n      setLoading(false);\n      setError(false);\n    } else {\n      const fetchData = async () => {\n        setLoading(true);\n        try {\n          const res = await fetch(getEndpoint(endpoint), FETCH_OPTIONS);\n          const json = await res.json();\n          setData(json);\n          setLoading(false);\n        } catch (error) {\n          setError(error);\n        }\n      };\n      fetchData();\n    }\n  }, []);\n  return { data, error, loading };\n};\n\nexport const useEndpoint = (endpoint, selector = data => data) => {\n  // const [endpointData, setEndpointData] = useRecoilState(atom({ key: endpoint, default: null }));\n  const lsKey = `ls-${endpoint}`;\n  const item = getLocalStorage(lsKey);\n  const localData = item && item.data;\n  const isExpired = item && item.isExpired; \n  const { loading, data, error } = useFetch(endpoint, localData);\n  error && console.log('error:', error);\n  \n  useEffect(() => {\n    if (!loading && data) {\n      !localData && !isExpired && setLocalStorage(lsKey, data);\n      // setEndpointData(data);\n    }\n  }, [data, loading]);\n\n  return { data: selector(data), error, loading };\n};","export const standingsSelector = data => data && data.standings[0].table;\nexport const matchesSelector = data => data && data.matches;\nexport const teamsSelector = data => data && data.teams;","import React, { useState } from 'react';\nimport { DataTable, Text } from 'grommet';\nimport { useEndpoint } from '../../utils/hooks';\nimport { standingsSelector }  from '../../utils/selectors';\n\nconst Positions = () => {\n  const { data } = useEndpoint('STANDINGS', standingsSelector);\n  const [sort, setSort] = useState({\n    property: 'points',\n    direction: 'desc'\n  });\n  return !data ? <div>Loading...</div> : (\n    <DataTable\n      primaryKey='index'\n      sort={sort}\n      onSort={setSort}\n      columns={[\n        {\n          property: 'position',\n          header: <Text>Position</Text>\n        },\n        {\n          property: 'team.name',\n          header: <Text>Team</Text>,\n          sortable: false\n        },\n        {\n          property: 'playedGames',\n          header: <Text>G</Text>,\n        },\n        {\n          property: 'won',\n          header: <Text>W</Text>,\n        },\n        {\n          property: 'draw',\n          header: <Text>D</Text>,\n        },\n        {\n          property: 'lost',\n          header: <Text>L</Text>,\n        },\n        {\n          property: 'goalDifference',\n          header: <Text>GD</Text>,\n        },\n        {\n          property: 'points',\n          header: <Text>P</Text>,\n        },\n      ]}\n      data={data}\n    />\n  );\n};\n\nexport default Positions;","import React, { useState, useEffect } from 'react';\nimport { DataTable, Text, Select } from 'grommet';\nimport dateFnsFormat from 'date-fns/format';\nimport { useEndpoint } from '../../utils/hooks';\nimport { matchesSelector, teamsSelector } from '../../utils/selectors';\n\nconst parseMatches = data => {\n  return data && data.map(match => {\n    const matchDate = dateFnsFormat(new Date(match.utcDate), 'EEEE, d MMMM - H:mm');\n    return ({\n      home: match.homeTeam.name,\n      away: match.awayTeam.name,\n      date: matchDate,\n    });\n  });\n};\n\nconst parseTeams = data => data.map(team => team.name).sort();\n\nconst filter = (data, value) => data.filter(({ home, away }) => home === value || away === value);\n\nconst Fixture = () => {\n  const [value, setValue] = useState('');\n  const [matchesData, setMatchesData] = useState(parseMatches(null));\n  const [filterTerms, setFilterTerms] = useState(null);\n  const { data: matches } = useEndpoint('FIXTURE', matchesSelector);\n  const { data: teams } = useEndpoint('TEAMS', teamsSelector);\n\n  useEffect(() => {\n    matches && setMatchesData(parseMatches(matches));\n  }, [matches]);\n  \n  useEffect(() => {\n    matchesData && value && setMatchesData(filter(parseMatches(matches), value));\n  }, [value]);\n\n  useEffect(() => {\n    teams && setFilterTerms(parseTeams(teams));\n  }, [teams]);\n\n  return !matchesData|| !teams || !filterTerms ? <div>Loading...</div> : \n    <>\n      <Select\n        options={filterTerms}\n        value={value}\n        onChange={({ option }) => setValue(option)}\n        onSearch={text => {\n          const escapedText = text.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n          const exp = new RegExp(escapedText, 'i');\n          setFilterTerms(parseTeams(teams).filter(o => exp.test(o)));\n        }}\n      />\n      <DataTable\n        primaryKey='index'\n        columns={[\n          {\n            property: 'home',\n            header: <Text>Home</Text>,\n            search: true,\n          },\n          {\n            property: 'away',\n            header: <Text>Away</Text>,\n            search: true,\n          },\n          {\n            property: 'date',\n            header: <Text>Date</Text>,\n          },\n        ]}\n        data={matchesData}\n      />\n    </>;\n};\n\nexport default Fixture;","import React from 'react';\n\nconst Home = () => {\n  return <div>Home</div>;\n};\n\nexport default Home;","import React from 'react';\n\nconst Bettings = () => <div>Bettings</div>;\n\nexport default Bettings;","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Positions from '../components/Positions';\nimport Fixture from '../components/Fixture';\nimport Home from '../components/Home';\nimport Bettings from '../components/Bettings';\n\nconst Routes = () => \n  <Switch>\n    <Route path={`${process.env.PUBLIC_URL}/home`}>\n      <Home />\n    </Route>\n    <Route path={`${process.env.PUBLIC_URL}/positions`}>\n      <Positions />\n    </Route>\n    <Route path={`${process.env.PUBLIC_URL}/fixture`}>\n      <Fixture />\n    </Route>\n    <Route path={`${process.env.PUBLIC_URL}/bettings`}>\n      <Bettings />\n    </Route>\n  </Switch>;\n\nexport default Routes;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header as BaseHeader, Nav, Button } from 'grommet';\nimport { clearLocalStorage } from '../../../utils/helpers';\n\n\n\nconst Header = () => <BaseHeader pad=\"medium\">\n  <Nav direction=\"row\" >\n    <Link to={`${process.env.PUBLIC_URL}/home`}>Home</Link>\n    <Link to={`${process.env.PUBLIC_URL}/positions`}>Positions</Link>\n    <Link to={`${process.env.PUBLIC_URL}/fixture`}>Fixture</Link>\n    <Link to={`${process.env.PUBLIC_URL}/bettings`}>Bettings</Link>\n    <Button onClick={clearLocalStorage} label=\"Clear local data\" size=\"small\" />\n  </Nav>\n</BaseHeader>;\n\nexport default Header;","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.   \n    return { hasError: true };  \n  }\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops!</h1>;\n    }\n    return this.props.children; \n  }\n};\n\nexport default ErrorBoundary;","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { RecoilRoot } from 'recoil';\nimport './App.css';\nimport Routes from './routes';\nimport Header from './components/common/Header';\nimport ErrorBoundary from './components/common/ErrorBoundary';\n\n\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        <RecoilRoot>\n          <Router>\n            <Header />\n            <Routes />\n          </Router>\n        </RecoilRoot>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}